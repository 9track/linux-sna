#
# snatchd.conf: This file describes the Transaction Programs that will 
# 		be available through the SNA Attach Manger.  To re-configure
#               the running SNATCHD process, edit this file, then send the
#               SNATCHD process a SIGHUP signal.
#
# Version:      @(#)/etc/snatchd.conf     0.01    03/30/00
#
# Authors:      Jay Schulist <jschlst@samba.org>
#
# <tp_name> <cnv_type> <sync_level> <limit> <flags> <user> <server_path> <args>
#
# Example:
# APINGD 	either 	none 	0 	QTP 	root 	/usr/sbin/apingd apingd
#
#
# To re-read this file after changes, just do a 'killall -HUP snattachd'
#
# tp_name:
#   A transaction program (TP) is a program that uses the advanced
#   program-to-program communications (APPC) system to communicate with a
#   partner application program at the partner node. The TP name is the name
#   of the remote program that provides information about how to accept
#   incomming Attaches and optionally start programs on the workstation.
#   The tp_name may be a 1-64 byte character string.
#
# cnv_type:
#   This specifies the conversation type allows to start the transaction
#   program (TPs) using an LU 6.2 session. You can select:
#   either - Either basic or mapped conversation is allowed to start the TPs.
#   basic  - Basic conversation for system TPs.
#   mapped - Mapped conversation for application TPs.
#
# sync_level:
#   The synchronization level is the level allowed on allocation requests
#   that start the local and remote transaction programs (TPs).
#   You can select:
#   any     - The TP will or will not perform confirmation processing to start
#   none    - The TP will not perform confirmation to start the program.
#   confirm - The TP will perform confirmation processing to start the program.
#
# limit:
#   The transaction program (TP) instance limit is the maximum number of
#   concurrently active TP instances. Value can be 0-65535, 0 = no limit.
#
# flags:
#   The flags specify specific features that the TP supports. A feature
#   is only on if the flag is defined. You can select:
#   SEC - Conversation security allows controlled access to system resources
#         through security parameters associated with a request for access
#	  to those resources.
#   PIP - Program initialization prameters (PIPs) are the names of variables
#         for the remote transaction prorgam (TPs). The PIPs are supplied
#         by the allocating program. The contents of the PIPs have meaning
#         only to the TPs and are not examined or used by the logical unit (LU).
#   API - This specifies that the transaction program definition is actually
#         for a transaction program which resides on an SNA API client,
#         different from this server.
#   FD  - This specifies if this transaction program will support full duplex
#         conversations.
#   QTP - This specifies whether the transaction program (TP) will be queued
#         while waiting for an Attach.
#
# user:
#   The user under which the process should run.
#
# server_path:
#   The pathname of the transaction program (TP) to be executed.
#
# args:
#   The command-line arguments to the transaction program (TP). The first
#   argument should be the short name of the prorgam.

# Standard services (should have security enabled).
APINGD	either	none	nowait.0	root	/usr/sbin/apingd	apingd
AFTPD	either	none	nowait.0	root	/usr/sbin/aftpd 	aftpd
ATELLD	either	none	nowait.0	root	/usr/sbin/atelld	atelld
AREXECD	either	none	nowait.0	root	/usr/sbin/arexec	arexecd
